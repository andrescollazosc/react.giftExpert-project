{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GitfGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGift","category","a","URL","encodeURI","fetch","result","json","data","gifts","map","img","id","title","url","images","downsized_medium","GifGridItem","src","alt","GitfGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,yBAAKO,UAAU,oBACb,2BAAOC,KAAK,OAAOC,MAAOV,EAAYW,SAhBlB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,a,uBCJdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,6BAFP,oCAEO,SAKAI,MAAMF,GALN,cAKfG,EALe,gBAMEA,EAAOC,OANT,uBAMbC,EANa,EAMbA,KACFC,EAAQD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAXhB,kBAedL,GAfc,4CAAH,sDCAPQ,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,yBAAKnB,UAAU,0CACb,yBAAKuB,IAAKJ,EAAKK,IAAKN,IACpB,2BAAIA,KCDGO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACff,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDXmBK,CAAc1B,GAAhCO,EAFgC,EAEhCA,KAAMa,EAF0B,EAE1BA,QAEd,OACE,oCACE,wBAAI1B,UAAU,qCAAqCM,GADrD,OAEGoB,QAFH,IAEGA,IAAW,sCAEZ,yBAAK1B,UAAU,aACZa,EAAKE,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEMzBkB,EAlBM,WAAO,IAAD,EACW3C,mBAAS,CAAC,cADrB,mBAClB4C,EADkB,KACN7C,EADM,KAGzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACG6C,EAAWpB,KAAI,SAACT,EAAU8B,GACzB,OAAO,kBAAC,EAAD,CAAUH,IAAK3B,EAAUA,SAAUA,U,MCVpD+B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.8306b918.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"container-search\">\r\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","const API_KEY = \"4unRoUHivM7m8qxkM6QxU4he4znh1tCB\";\r\n\r\nexport const getGift = async (category) => {\r\n  const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=${API_KEY}`;\r\n\r\n  const result = await fetch(URL);\r\n  const { data } = await result.json();\r\n  const gifts = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifts;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifts } from \"../hooks/useFetchGifts\";\r\n// import { getGift } from \"../helpers/getGifts\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GitfGrid = ({ category }) => {\r\n  // const [images, setImages] = useState([]);\r\n  const { data, loading } = useFetchGifts(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {loading ?? <p>Loading</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGift } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifts = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGift(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GitfGrid } from \"./components/GitfGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category, i) => {\r\n          return <GitfGrid key={category} category={category} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}